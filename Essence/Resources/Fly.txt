local player = game.Players.LocalPlayer
local torso = player.Character and player.Character:FindFirstChild("Torso")

if not torso then
    warn("Player's torso not found.")
    return
end

if getgenv().EvoEnvFly == nil then
    getgenv().EvoEnvFly = true
    local mouse = player:GetMouse()
    local ctrl = {f = 0, b = 0, l = 0, r = 0}
    local lastctrl = {f = 0, b = 0, l = 0, r = 0}
    local maxspeed = 500
    local speed = 0

    local bg = Instance.new("BodyGyro", torso)
    bg.P = 9e4
    bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    bg.cframe = torso.CFrame
    local bv = Instance.new("BodyVelocity", torso)
    bv.velocity = Vector3.new(0, 0.1, 0)
    bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

    -- Usando UserInputService para capturar as teclas
    local UserInputService = game:GetService("UserInputService")

    -- Conectando eventos de teclas com UserInputService
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end  -- Ignorar entrada se o jogo já processou

        if input.UserInputType == Enum.UserInputType.Keyboard then
            if input.KeyCode == Enum.KeyCode.W then
                ctrl.f = 1
            elseif input.KeyCode == Enum.KeyCode.S then
                ctrl.b = -1
            elseif input.KeyCode == Enum.KeyCode.A then
                ctrl.l = -1
            elseif input.KeyCode == Enum.KeyCode.D then
                ctrl.r = 1
            end
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard then
            if input.KeyCode == Enum.KeyCode.W then
                ctrl.f = 0
            elseif input.KeyCode == Enum.KeyCode.S then
                ctrl.b = 0
            elseif input.KeyCode == Enum.KeyCode.A then
                ctrl.l = 0
            elseif input.KeyCode == Enum.KeyCode.D then
                ctrl.r = 0
            end
        end
    end)

    repeat
        wait()
        player.Character.Humanoid.PlatformStand = true
        if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
            speed = speed + 2.2 + (speed / maxspeed)
            if speed > maxspeed then
                speed = maxspeed
            end
        elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
            speed = speed - 7
            if speed < 0 then
                speed = 0
            end
        end
        if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
            bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) +
                            ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * speed
            lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
        elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
            bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f + lastctrl.b)) +
                            ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l + lastctrl.r, (lastctrl.f + lastctrl.b) * .2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * speed
        else
            bv.velocity = Vector3.new(0, 0.1, 0)
        end
        bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * speed / maxspeed), 0, 0)
    until not getgenv().EvoEnvFly

    ctrl = {f = 0, b = 0, l = 0, r = 0}
    lastctrl = {f = 0, b = 0, l = 0, r = 0}
    speed = 0
    bg:Destroy()
    bv:Destroy()
    player.Character.Humanoid.PlatformStand = false
else
    getgenv().EvoEnvFly = nil  -- Corrigido para atribuição correta
end
